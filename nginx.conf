events {
    worker_connections 1024;
}

http {
    # Configuración básica
    sendfile on;
    keepalive_timeout 65;
    
    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log warn;

    # Upstream - Define dónde está tu API
    upstream task_api {
        server api:3000;
    }

    server {
        listen 80;
        server_name localhost;

        # Logs específicos para este server
        access_log /var/log/nginx/api_access.log;
        error_log /var/log/nginx/api_error.log;

        # Health check directo
        location /health {
            proxy_pass http://task_api/api/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # No cache para health checks
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }

        # API routes
        location /api/ {
            proxy_pass http://task_api/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CORS headers
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            
            # Handle preflight OPTIONS request
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Landing page
        location / {
            return 200 '{
                "message": "Task Manager API Gateway",
                "endpoints": {
                    "health": "/health",
                    "api": "/api/*",
                    "auth": "/api/auth/login | /api/auth/register",
                    "tasks": "/api/tasks"
                },
                "powered_by": "nginx + nestjs"
            }';
            add_header Content-Type application/json;
        }

        # Nginx status (para debugging)
        location /nginx-status {
            stub_status;
            allow 127.0.0.1;
            allow ::1;
            deny all;
        }
    }
}